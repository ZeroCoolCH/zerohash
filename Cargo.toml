[package]
name = "zerohash_finder"
version = "0.1.0"
edition = "2021"

[dependencies]
bytes = "1"
clap = { version = "4.5.4", features = ["derive"] }
crossbeam-utils = "0.8.20"
crossbeam = { version = "0.8", features = ["crossbeam-channel", "crossbeam-deque", "crossbeam-queue"] }
hex = "0.4.3"
num_cpus = "1.16.0"
rayon = "1.10.0"
# ripemd = "0.1.3" # Remover crate ripemd
secp256k1 = { version = "0.27.0", features = ["global-context", "rand-std", "recovery"] }
bs58 = { version = "0.5.1", features = ["check"] }
digest = "0.10.7" # Mantido por ripemd? (Verificar se ainda é necessário após remover ripemd C++ explícito)
openssl = "0.10.64"
openssl-sys = "0.9"
rand = "0.8.5"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
thiserror = "1.0.59"
ctrlc = "3.4.4" # Adicionado para lidar com Ctrl+C
atomic = "0.5" # Adicionado para AtomicU128
bitcoin = { version = "0.30", features = ["rand", "secp-recovery"] } # Crate bitcoin com recursos avançados
# sha2 = "0.10.8" # Remover crate sha2

# Novas dependências para otimizações
faster-hex = "0.6.1"  # Codificação/decodificação hex ultra rápida
bytemuck = "1.13.1"  # Conversões rápidas de bytes
once_cell = "1.18.0"  # Inicialização de estáticos eficiente

# Adicionar seção de build-dependencies
[build-dependencies] # Reativar
cc = { version = "1.0", features = ["parallel"] } # Reativar com compilação paralela

[profile.release]
strip = true
lto = "fat"  # Link Time Optimization agressivo
codegen-units = 1  # Reduzir para otimização máxima
opt-level = 3
panic = 'abort'
debug = true # Habilitar informações de debug para profiling

# Novas flags de compilação otimizadas
[profile.release.package."*"]
opt-level = 3

# Configurações específicas para benchmarking
[profile.bench]
lto = "fat"
codegen-units = 1
opt-level = 3
debug = true
